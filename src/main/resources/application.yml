spring:
  application:
    name: USER-SERVICE
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3309/user_service?useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: 1234

      
  mail:
    host: smtp.gmail.com
    port: 587
    username: billit.project@gmail.com
    password: fudm pmdh gapt stxa
    default-encoding: UTF-8
    properties:
      mail:
        mime:
          charset: UTF-8
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000


  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: host.docker.internal:9092
    consumer:
      group-id: user-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

feign:
  client:
    config:
      loan-group-service:
        url: ${LOAN_GROUP_SERVICE_URL:http://host.docker.internal:8084}
      invest-service:
        url: ${INVEST_SERVICE_URL:http://host.docker.internal:8081}
      repayment-service:
        url: ${REPAYMENT_SERVICE_URL:http://host.docker.internal:8082}
      loan-service:
        url: ${LOAN_SERVICE_URL:http://host.docker.internal:8083}
      user-service:
        url: ${USER_SERVICE_URL:http://host.docker.internal:8085}


server:
  port: 8085
  servlet:
    context-path: /api/v1/user-service

eureka:
  instance:
    prefer-ip-address: true
    ip-address: host.docker.internal
  client:
    service-url:
      defaultZone: http://host.docker.internal:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

logging:
  file:
    name: ./logs/user-service.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.billit.user_service: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK
  token-validity-in-milliseconds: 3600000